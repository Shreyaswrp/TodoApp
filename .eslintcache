[{"/home/nitin/React/todo-list/src/index.js":"1","/home/nitin/React/todo-list/src/App.js":"2","/home/nitin/Desktop/todo-list/src/index.js":"3","/home/nitin/Desktop/todo-list/src/App.js":"4","/home/nitin/Desktop/todo-list/src/components/LoginPage/Login.js":"5","/home/nitin/Desktop/todo-list/src/components/LoginPage/LoginPage.js":"6","/home/nitin/Desktop/todo-list/src/components/TodoPage/TodoForm.js":"7","/home/nitin/Desktop/todo-list/src/components/TodoPage/TodoItem.js":"8"},{"size":221,"mtime":1608733132645,"results":"9","hashOfConfig":"10"},{"size":207,"mtime":1608973559788,"results":"11","hashOfConfig":"10"},{"size":221,"mtime":1608733132645,"results":"12","hashOfConfig":"13"},{"size":490,"mtime":1609213865146,"results":"14","hashOfConfig":"13"},{"size":3079,"mtime":1609224238868,"results":"15","hashOfConfig":"13"},{"size":3281,"mtime":1609224457837,"results":"16","hashOfConfig":"13"},{"size":4158,"mtime":1609224928967,"results":"17","hashOfConfig":"13"},{"size":1669,"mtime":1609215956194,"results":"18","hashOfConfig":"13"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"tdmoy3",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"x5tmfk",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"/home/nitin/React/todo-list/src/index.js",[],["40","41"],"/home/nitin/React/todo-list/src/App.js",["42"],"/home/nitin/Desktop/todo-list/src/index.js",[],["43","44"],"/home/nitin/Desktop/todo-list/src/App.js",[],"/home/nitin/Desktop/todo-list/src/components/LoginPage/Login.js",["45","46"],"import React from 'react'\nimport axios from 'axios'\nimport '../../style/login.css'\nimport LoginPage from \"./LoginPage\";\n\nclass Login extends React.Component {\n    constructor()\n    {\n        super()\n        this.state = {\n            userName: '',\n            password: '',\n            userNameErrorMessage: '',\n            passwordErrorMessage: '',\n            userAuthenticationFail: '',\n            passwordVisibility: true\n        }\n    }\n\n    componentDidMount = () => {\n        localStorage.clear();\n    }\n\n    handleLoginFormSubmit = (event) => {\n        event.preventDefault()\n        const emailValidation = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (this.state.userName === '' && this.state.password === '') {\n            this.setState({userNameErrorMessage: 'User name cannot be empty!', passwordErrorMessage: 'Password cannot be empty!'})\n        } else if (!emailValidation.test(this.state.userName)) {\n            this.setState({userNameErrorMessage: 'Enter a valid email id!'})\n        } else if (this.state.password.length < 5) {\n            this.setState({passwordErrorMessage: 'Enter a valid password!'})\n        } else {\n            this.handleUserLogin()\n            this.setState({userNameErrorMessage: '', passwordErrorMessage: ''})\n        }\n    }\n\n    handleInputChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n        this.setState({userAuthenticationFail: ''})\n    }\n\n    handleUserErrorMessage = () => {\n        this.setState({userNameErrorMessage: ''})\n    }\n\n    handlePasswordErrorMessage = () => {\n        this.setState({passwordErrorMessage: ''})\n    }\n\n    changePasswordVisibilityType = () => {\n        this.setState(preState => {\n            return {\n                passwordVisibility: !preState.passwordVisibility\n            }\n        })\n    }\n\n    handleUserLogin = async() => {\n        const user = {\n            user_email: this.state.userName,\n            password: this.state.password\n        }\n        try {\n            const response = await axios.post('http://api.ganies.com/login', user);\n            console.log(response.data)\n            if (response.status === 200) {\n                localStorage.setItem('token', response.data.auth_token)\n                return this\n                    .props\n                    .history\n                    .push('/todo')\n            }\n        } catch (error) {\n            this.setState({userAuthenticationFail: 'failed to login, user not found'})\n        }\n    }\n\n    render() {\n        return (<LoginPage\n            stateData={this.state}\n            handleLoginFormSubmit={this.handleLoginFormSubmit}\n            handleInputChange={this.handleInputChange}\n            handleUserErrorMessage={this.handleUserErrorMessage}\n            handlePasswordErrorMessage={this.handlePasswordErrorMessage}\n            changePasswordVisibilityType={this.changePasswordVisibilityType}/>)\n    }\n}\n\nexport default Login","/home/nitin/Desktop/todo-list/src/components/LoginPage/LoginPage.js",["47"],"import React from 'react'\nimport loginImage from '../../asset/account.svg'\n\nfunction LoginPage(props) {\n    return (\n        <div>\n            <div className='login-page-container'>\n                <div className=\"login-page-heading\">\n                    <h4>Login to your account</h4>\n                </div>\n                <div className='form-container'>\n                    <form\n                        className='login-form'\n                        onSubmit={event => props.handleLoginFormSubmit(event)}\n                        autoComplete=\"off\">\n                        <div className='username-input-field'>\n                            <div className='userInput-box'>\n                                <input\n                                    type='text'\n                                    name='userName'\n                                    placeholder=' '\n                                    value={props.stateData.userName}\n                                    className='login-input'\n                                    onChange={event => props.handleInputChange(event)}\n                                    onInput={props.handleUserErrorMessage}/>\n                                <label className='username-label'>Username</label>\n                            </div>\n                            <span className='username-error-message'>{props.stateData.userNameErrorMessage}</span>\n                        </div>\n                        <div className='password-box'>\n                            <input\n                                className='login-password'\n                                type={props.stateData.passwordVisibility\n                                ? 'password'\n                                : 'text'}\n                                name='password'\n                                placeholder=' '\n                                value={props.stateData.password}\n                                onChange={event => props.handleInputChange(event)}\n                                onInput={props.handlePasswordErrorMessage}/>\n                            <label className='password-label'>Password</label>\n                            <i\n                                className={props.stateData.passwordVisibility\n                                ? \"fas fa-eye-slash password-visibility-icon\"\n                                : \"far fa-eye password-visibility-icon\"}\n                                onClick={props.changePasswordVisibilityType}></i>\n                        </div>\n                        <span className='password-error-message'>{props.stateData.passwordErrorMessage}</span>\n                        <div>\n                            <span className='userNotFound-error-message'>{props.stateData.userAuthenticationFail}</span>\n                        </div>\n                        <button type=\"submit\" className='login-button'>Login</button>\n                        <div className='new-account-link'>Create Account</div>\n                    </form>\n                </div>\n                <div className='image-position'>\n                    <figure>\n                        <img src={loginImage} alt='Login-image'/>\n                    </figure>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LoginPage\n","/home/nitin/Desktop/todo-list/src/components/TodoPage/TodoForm.js",[],"/home/nitin/Desktop/todo-list/src/components/TodoPage/TodoItem.js",[],["48","49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":8,"nodeType":"56","messageId":"57","endLine":1,"endColumn":16},{"ruleId":"50","replacedBy":"58"},{"ruleId":"52","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":26,"column":43,"nodeType":"62","messageId":"63","endLine":26,"endColumn":44,"suggestions":"64"},{"ruleId":"60","severity":1,"message":"61","line":26,"column":68,"nodeType":"62","messageId":"63","endLine":26,"endColumn":69,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":58,"column":25,"nodeType":"68","endLine":58,"endColumn":66},{"ruleId":"50","replacedBy":"69"},{"ruleId":"52","replacedBy":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'TodoForm' is defined but never used.","Identifier","unusedVar",["71"],["72"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["73","74"],["75","76"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["71"],["72"],"no-global-assign","no-unsafe-negation",{"messageId":"77","fix":"78","desc":"79"},{"messageId":"80","fix":"81","desc":"82"},{"messageId":"77","fix":"83","desc":"79"},{"messageId":"80","fix":"84","desc":"82"},"removeEscape",{"range":"85","text":"86"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"87","text":"88"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"89","text":"86"},{"range":"90","text":"88"},[627,628],"",[627,627],"\\",[652,653],[652,652]]